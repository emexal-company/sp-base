{"version":3,"file":"base.component.js","sourceRoot":"","sources":["../src/base.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { CSSResultArray, CSSResult,  customElement, LitElement} from 'lit-element';\r\nimport { supportsAdoptingStyleSheets } from 'lit-element/lib/css-tag.js';\r\n\r\nimport { Spectrum } from '@spectrum/sp-config';\r\n\r\nfunction arrayFlat(\r\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\r\n    for (let i = 0, length = styles.length; i < length; i++) {\r\n        const value = styles[i];\r\n        if (Array.isArray(value)) {\r\n            arrayFlat(value, result);\r\n        } else {\r\n            result.push(value as CSSResult);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n/** Deeply flattens styles array. Uses native flat if available. */\r\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\r\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\r\n\r\n@customElement('sp-base')\r\nexport class Base extends LitElement {\r\n    public static styles: CSSResult[] | undefined;\r\n    public static componentStyles: CSSResult[] | undefined;\r\n\r\n    public connectedCallback() {\r\n        super.connectedCallback();\r\n\r\n        document.addEventListener('spectrum-theme-changed', (_) => {\r\n            // Rebuild the static style, before adopting the new styles\r\n            Object.getPrototypeOf(this).constructor.styles = this._getUniqueStyles();\r\n            this.adoptStyles();\r\n            this.requestUpdate();\r\n        });\r\n    }\r\n\r\n    protected initialize() {\r\n        if (!Object.getPrototypeOf(this).constructor.styles) {\r\n            Object.getPrototypeOf(this).constructor.styles = this._getUniqueStyles();\r\n        }\r\n        return super.initialize();\r\n    }\r\n\r\n    protected adoptStyles() {\r\n        const styles = Object.getPrototypeOf(this).constructor.styles;\r\n        if (styles.length === 0) {\r\n            return;\r\n        }\r\n        // There are three separate cases here based on Shadow DOM support.\r\n        // (1) shadowRoot polyfilled: use ShadyCSS\r\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\r\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\r\n        // rendering\r\n        if ((window as any).ShadyCSS !== undefined && !(window as any).ShadyCSS.nativeShadow) {\r\n            (window as any).ShadyCSS.ScopingShim!.prepareAdoptedCssText(\r\n                styles.map((s: any) => s.cssText), this.localName);\r\n        } else if (supportsAdoptingStyleSheets) {\r\n            (this.renderRoot as any).adoptedStyleSheets =\r\n                styles.map((s: any) => s.styleSheet!);\r\n        } else {\r\n            // This must be done after rendering so the actual style insertion is done\r\n            // in `update`.\r\n            Object.getPrototypeOf(this)._needsShimAdoptedStyleSheets = true;\r\n        }\r\n    }\r\n\r\n    /** @nocollapse */\r\n    private _getUniqueStyles(): CSSResult[] {\r\n        // Take care not to call `this.styles` multiple times since this generates\r\n        // new CSSResults each time.\r\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\r\n        // shared styles will generate new stylesheet objects, which is wasteful.\r\n        // This should be addressed when a browser ships constructable\r\n        // stylesheets.\r\n        const userStyles = [Spectrum.themeStyles, Object.getPrototypeOf(this).constructor.componentStyles];\r\n        const styles: CSSResult[] = [];\r\n        if (Array.isArray(userStyles)) {\r\n            const flatStyles = flattenStyles(userStyles);\r\n            // As a performance optimization to avoid duplicated styling that can\r\n            // occur especially when composing via subclassing, de-duplicate styles\r\n            // preserving the last item in the list. The last item is kept to\r\n            // try to preserve cascade order with the assumption that it's most\r\n            // important that last added styles override previous styles.\r\n            const styleSet = flatStyles.reduceRight((set, s) => {\r\n                set.add(s);\r\n                // on IE set.add does not return the set.\r\n                return set;\r\n            }, new Set<CSSResult>());\r\n            // Array.from does not work on Set in IE\r\n            styleSet.forEach((v) => styles.unshift(v));\r\n        } else if (userStyles) {\r\n            styles.push(userStyles);\r\n        }\r\n        return styles;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'sp-base': Base;\r\n    }\r\n}\r\n"]}